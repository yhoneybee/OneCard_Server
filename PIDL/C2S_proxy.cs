




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

namespace C2S
{
	public class Proxy:Nettention.Proud.RmiProxy
	{
public bool CreateRoom(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string name, int pin, int max)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.CreateRoom;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, name);
		Nettention.Proud.Marshaler.Write(__msg, pin);
		Nettention.Proud.Marshaler.Write(__msg, max);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_CreateRoom, Common.CreateRoom);
}

public bool CreateRoom(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string name, int pin, int max)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.CreateRoom;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, name);
Nettention.Proud.Marshaler.Write(__msg, pin);
Nettention.Proud.Marshaler.Write(__msg, max);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_CreateRoom, Common.CreateRoom);
}
public bool JoinRoom(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string name, int pin)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.JoinRoom;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, name);
		Nettention.Proud.Marshaler.Write(__msg, pin);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_JoinRoom, Common.JoinRoom);
}

public bool JoinRoom(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string name, int pin)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.JoinRoom;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, name);
Nettention.Proud.Marshaler.Write(__msg, pin);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_JoinRoom, Common.JoinRoom);
}
public bool LeaveRoom(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string name)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.LeaveRoom;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, name);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_LeaveRoom, Common.LeaveRoom);
}

public bool LeaveRoom(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string name)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.LeaveRoom;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, name);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_LeaveRoom, Common.LeaveRoom);
}
public bool Ready(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.Ready;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_Ready, Common.Ready);
}

public bool Ready(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.Ready;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_Ready, Common.Ready);
}
public bool UnReady(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.UnReady;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_UnReady, Common.UnReady);
}

public bool UnReady(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.UnReady;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_UnReady, Common.UnReady);
}
public bool Down(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int symbol, int num)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.Down;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, symbol);
		Nettention.Proud.Marshaler.Write(__msg, num);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_Down, Common.Down);
}

public bool Down(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int symbol, int num)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.Down;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, symbol);
Nettention.Proud.Marshaler.Write(__msg, num);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_Down, Common.Down);
}
public bool Draw(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int count)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.Draw;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, count);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_Draw, Common.Draw);
}

public bool Draw(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int count)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.Draw;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, count);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_Draw, Common.Draw);
}
public bool Attack(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int count)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.Attack;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, count);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_Attack, Common.Attack);
}

public bool Attack(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int count)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.Attack;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, count);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_Attack, Common.Attack);
}
public bool Invalid(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.Invalid;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_Invalid, Common.Invalid);
}

public bool Invalid(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.Invalid;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_Invalid, Common.Invalid);
}
public bool ChangeSymbol(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int symbol)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ChangeSymbol;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, symbol);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ChangeSymbol, Common.ChangeSymbol);
}

public bool ChangeSymbol(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int symbol)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ChangeSymbol;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, symbol);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ChangeSymbol, Common.ChangeSymbol);
}
public bool OneCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.OneCard;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_OneCard, Common.OneCard);
}

public bool OneCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.OneCard;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_OneCard, Common.OneCard);
}
public bool ZeroCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ZeroCard;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ZeroCard, Common.ZeroCard);
}

public bool ZeroCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ZeroCard;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ZeroCard, Common.ZeroCard);
}
	
		#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_CreateRoom="CreateRoom";
public const string RmiName_JoinRoom="JoinRoom";
public const string RmiName_LeaveRoom="LeaveRoom";
public const string RmiName_Ready="Ready";
public const string RmiName_UnReady="UnReady";
public const string RmiName_Down="Down";
public const string RmiName_Draw="Draw";
public const string RmiName_Attack="Attack";
public const string RmiName_Invalid="Invalid";
public const string RmiName_ChangeSymbol="ChangeSymbol";
public const string RmiName_OneCard="OneCard";
public const string RmiName_ZeroCard="ZeroCard";
       
public const string RmiName_First = RmiName_CreateRoom;
		#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_CreateRoom="";
public const string RmiName_JoinRoom="";
public const string RmiName_LeaveRoom="";
public const string RmiName_Ready="";
public const string RmiName_UnReady="";
public const string RmiName_Down="";
public const string RmiName_Draw="";
public const string RmiName_Attack="";
public const string RmiName_Invalid="";
public const string RmiName_ChangeSymbol="";
public const string RmiName_OneCard="";
public const string RmiName_ZeroCard="";
       
public const string RmiName_First = "";
		#endif

		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

