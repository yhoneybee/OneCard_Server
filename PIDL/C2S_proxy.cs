




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;
using Nettention.Proud;

namespace C2S
{
	public class Proxy:Nettention.Proud.RmiProxy
	{
public bool RoomCreate(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string room_name, int pw, int max_player)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RoomCreate;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, room_name);
		Nettention.Proud.Marshaler.Write(__msg, pw);
		Nettention.Proud.Marshaler.Write(__msg, max_player);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RoomCreate, Common.RoomCreate);
}

public bool RoomCreate(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string room_name, int pw, int max_player)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RoomCreate;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, room_name);
Nettention.Proud.Marshaler.Write(__msg, pw);
Nettention.Proud.Marshaler.Write(__msg, max_player);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RoomCreate, Common.RoomCreate);
}
public bool JoinRoom(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string room_name, int pw)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.JoinRoom;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, room_name);
		Nettention.Proud.Marshaler.Write(__msg, pw);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_JoinRoom, Common.JoinRoom);
}

public bool JoinRoom(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string room_name, int pw)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.JoinRoom;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, room_name);
Nettention.Proud.Marshaler.Write(__msg, pw);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_JoinRoom, Common.JoinRoom);
}
public bool LeaveRoom(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string room_name)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.LeaveRoom;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, room_name);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_LeaveRoom, Common.LeaveRoom);
}

public bool LeaveRoom(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string room_name)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.LeaveRoom;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, room_name);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_LeaveRoom, Common.LeaveRoom);
}
public bool GameStart(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, string room_name)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.GameStart;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, room_name);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_GameStart, Common.GameStart);
}

public bool GameStart(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, string room_name)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.GameStart;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, room_name);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_GameStart, Common.GameStart);
}
	
		#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_RoomCreate="RoomCreate";
public const string RmiName_JoinRoom="JoinRoom";
public const string RmiName_LeaveRoom="LeaveRoom";
public const string RmiName_GameStart="GameStart";
       
public const string RmiName_First = RmiName_RoomCreate;
		#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_RoomCreate="";
public const string RmiName_JoinRoom="";
public const string RmiName_LeaveRoom="";
public const string RmiName_GameStart="";
       
public const string RmiName_First = "";
		#endif

		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

