




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

namespace S2C
{
	public class Proxy:Nettention.Proud.RmiProxy
	{
public bool Start(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.Start;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_Start, Common.Start);
}

public bool Start(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.Start;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_Start, Common.Start);
}
public bool TurnStart(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.TurnStart;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_TurnStart, Common.TurnStart);
}

public bool TurnStart(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.TurnStart;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_TurnStart, Common.TurnStart);
}
public bool LastCard(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int symbol, int num)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.LastCard;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, symbol);
		Nettention.Proud.Marshaler.Write(__msg, num);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_LastCard, Common.LastCard);
}

public bool LastCard(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int symbol, int num)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.LastCard;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, symbol);
Nettention.Proud.Marshaler.Write(__msg, num);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_LastCard, Common.LastCard);
}
public bool Down(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int symbol, int num)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.Down;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, symbol);
		Nettention.Proud.Marshaler.Write(__msg, num);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_Down, Common.Down);
}

public bool Down(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int symbol, int num)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.Down;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, symbol);
Nettention.Proud.Marshaler.Write(__msg, num);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_Down, Common.Down);
}
public bool Draw(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int symbol, int num)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.Draw;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, symbol);
		Nettention.Proud.Marshaler.Write(__msg, num);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_Draw, Common.Draw);
}

public bool Draw(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int symbol, int num)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.Draw;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, symbol);
Nettention.Proud.Marshaler.Write(__msg, num);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_Draw, Common.Draw);
}
public bool ChangeSymbol(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int symbol)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ChangeSymbol;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, symbol);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ChangeSymbol, Common.ChangeSymbol);
}

public bool ChangeSymbol(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int symbol)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ChangeSymbol;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, symbol);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ChangeSymbol, Common.ChangeSymbol);
}
public bool Rank(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int rank)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.Rank;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, rank);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_Rank, Common.Rank);
}

public bool Rank(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int rank)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.Rank;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, rank);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_Rank, Common.Rank);
}
public bool ExcludeGame(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.ExcludeGame;
		__msg.Write(__msgid);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_ExcludeGame, Common.ExcludeGame);
}

public bool ExcludeGame(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.ExcludeGame;
__msg.Write(__msgid);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_ExcludeGame, Common.ExcludeGame);
}
public bool NowCardsCount(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, Nettention.Proud.HostID client, int count)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.NowCardsCount;
		__msg.Write(__msgid);
		Nettention.Proud.Marshaler.Write(__msg, client);
		Nettention.Proud.Marshaler.Write(__msg, count);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_NowCardsCount, Common.NowCardsCount);
}

public bool NowCardsCount(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, Nettention.Proud.HostID client, int count)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.NowCardsCount;
__msg.Write(__msgid);
Nettention.Proud.Marshaler.Write(__msg, client);
Nettention.Proud.Marshaler.Write(__msg, count);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_NowCardsCount, Common.NowCardsCount);
}
	
		#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_Start="Start";
public const string RmiName_TurnStart="TurnStart";
public const string RmiName_LastCard="LastCard";
public const string RmiName_Down="Down";
public const string RmiName_Draw="Draw";
public const string RmiName_ChangeSymbol="ChangeSymbol";
public const string RmiName_Rank="Rank";
public const string RmiName_ExcludeGame="ExcludeGame";
public const string RmiName_NowCardsCount="NowCardsCount";
       
public const string RmiName_First = RmiName_Start;
		#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
public const string RmiName_Start="";
public const string RmiName_TurnStart="";
public const string RmiName_LastCard="";
public const string RmiName_Down="";
public const string RmiName_Draw="";
public const string RmiName_ChangeSymbol="";
public const string RmiName_Rank="";
public const string RmiName_ExcludeGame="";
public const string RmiName_NowCardsCount="";
       
public const string RmiName_First = "";
		#endif

		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

